// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovery.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Hospital struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RegisteredTime       int64    `protobuf:"varint,3,opt,name=registeredTime,proto3" json:"registeredTime,omitempty"`
	GatewayAddr          string   `protobuf:"bytes,4,opt,name=gatewayAddr,proto3" json:"gatewayAddr,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hospital) Reset()         { *m = Hospital{} }
func (m *Hospital) String() string { return proto.CompactTextString(m) }
func (*Hospital) ProtoMessage()    {}
func (*Hospital) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{0}
}

func (m *Hospital) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hospital.Unmarshal(m, b)
}
func (m *Hospital) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hospital.Marshal(b, m, deterministic)
}
func (m *Hospital) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hospital.Merge(m, src)
}
func (m *Hospital) XXX_Size() int {
	return xxx_messageInfo_Hospital.Size(m)
}
func (m *Hospital) XXX_DiscardUnknown() {
	xxx_messageInfo_Hospital.DiscardUnknown(m)
}

var xxx_messageInfo_Hospital proto.InternalMessageInfo

func (m *Hospital) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Hospital) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Hospital) GetRegisteredTime() int64 {
	if m != nil {
		return m.RegisteredTime
	}
	return 0
}

func (m *Hospital) GetGatewayAddr() string {
	if m != nil {
		return m.GatewayAddr
	}
	return ""
}

func (m *Hospital) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{1}
}

func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	RegisteredTime       int64    `protobuf:"varint,1,opt,name=registeredTime,proto3" json:"registeredTime,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{2}
}

func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetRegisteredTime() int64 {
	if m != nil {
		return m.RegisteredTime
	}
	return 0
}

func (m *InfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InfoResponse) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListResponse struct {
	Hospitals            []*Hospital `protobuf:"bytes,1,rep,name=hospitals,proto3" json:"hospitals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetHospitals() []*Hospital {
	if m != nil {
		return m.Hospitals
	}
	return nil
}

func init() {
	proto.RegisterType((*Hospital)(nil), "Hospital")
	proto.RegisterType((*InfoRequest)(nil), "InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "InfoResponse")
	proto.RegisterType((*ListRequest)(nil), "ListRequest")
	proto.RegisterType((*ListResponse)(nil), "ListResponse")
}

func init() {
	proto.RegisterFile("discovery.proto", fileDescriptor_1e7ff60feb39c8d0)
}

var fileDescriptor_1e7ff60feb39c8d0 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xeb, 0x24, 0x14, 0x72, 0x4d, 0x8a, 0xf0, 0x64, 0x55, 0x08, 0x45, 0x19, 0x20, 0x93,
	0x87, 0x32, 0x30, 0x83, 0x90, 0x00, 0xc1, 0x14, 0x31, 0xb1, 0xb9, 0xf5, 0x51, 0x2c, 0x35, 0x71,
	0xb0, 0xdd, 0xa2, 0xf2, 0x20, 0x3c, 0x2f, 0x4a, 0xda, 0xa8, 0x16, 0x74, 0xf3, 0xfd, 0x96, 0xee,
	0xbe, 0xef, 0x0e, 0x4e, 0xa5, 0xb2, 0x73, 0xbd, 0x46, 0xb3, 0xe1, 0x8d, 0xd1, 0x4e, 0xe7, 0x3f,
	0x04, 0x4e, 0x1e, 0xb5, 0x6d, 0x94, 0x13, 0x4b, 0x3a, 0x86, 0x40, 0x49, 0x46, 0x32, 0x52, 0xc4,
	0x65, 0xa0, 0x24, 0xa5, 0x10, 0xd5, 0xa2, 0x42, 0x16, 0x74, 0x49, 0xf7, 0xa6, 0x97, 0x30, 0x36,
	0xb8, 0x50, 0xd6, 0xa1, 0x41, 0xf9, 0xaa, 0x2a, 0x64, 0x61, 0x46, 0x8a, 0xb0, 0xfc, 0x93, 0xd2,
	0x0c, 0x46, 0x0b, 0xe1, 0xf0, 0x4b, 0x6c, 0x6e, 0xa5, 0x34, 0x2c, 0xea, 0x5a, 0xf8, 0x11, 0x3d,
	0x87, 0xb8, 0x59, 0xcd, 0x96, 0x6a, 0xfe, 0x8c, 0x1b, 0x76, 0x94, 0x91, 0x22, 0x29, 0xf7, 0x41,
	0x9e, 0xc2, 0xe8, 0xa9, 0x7e, 0xd7, 0x25, 0x7e, 0xae, 0xd0, 0xba, 0xfc, 0x1b, 0x92, 0x6d, 0x69,
	0x1b, 0x5d, 0xdb, 0x43, 0x18, 0xe4, 0x20, 0xc6, 0x56, 0x29, 0xf8, 0xa7, 0x14, 0x7a, 0x4a, 0x17,
	0x00, 0x8d, 0x51, 0x6b, 0xe1, 0xb0, 0x25, 0x89, 0x3a, 0x12, 0x2f, 0x69, 0x51, 0x5e, 0x94, 0x75,
	0x3d, 0xca, 0x0d, 0x24, 0xdb, 0x72, 0x87, 0x72, 0x05, 0xf1, 0xc7, 0x6e, 0x83, 0x96, 0x91, 0x2c,
	0x2c, 0x46, 0xd3, 0x98, 0xf7, 0x3b, 0x2d, 0xf7, 0x7f, 0xd3, 0x0a, 0xce, 0xfa, 0xf8, 0xbe, 0x3f,
	0x03, 0x2d, 0xe0, 0xf8, 0x01, 0x5d, 0xeb, 0x46, 0x13, 0xee, 0x19, 0x4f, 0x52, 0xee, 0x0b, 0xe7,
	0x03, 0xca, 0x21, 0x6d, 0xe7, 0xf6, 0x2d, 0x2c, 0x4d, 0xb8, 0x87, 0x35, 0x49, 0xb9, 0x4f, 0x95,
	0x0f, 0xee, 0x86, 0x6f, 0x51, 0x25, 0x54, 0x3d, 0x1b, 0x76, 0x97, 0xbe, 0xfe, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x51, 0x29, 0x2a, 0x84, 0xfc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HospitalDiscoveryClient is the client API for HospitalDiscovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HospitalDiscoveryClient interface {
	GetInfo(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	ListHospitals(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type hospitalDiscoveryClient struct {
	cc grpc.ClientConnInterface
}

func NewHospitalDiscoveryClient(cc grpc.ClientConnInterface) HospitalDiscoveryClient {
	return &hospitalDiscoveryClient{cc}
}

func (c *hospitalDiscoveryClient) GetInfo(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/HospitalDiscovery/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalDiscoveryClient) ListHospitals(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/HospitalDiscovery/ListHospitals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HospitalDiscoveryServer is the server API for HospitalDiscovery service.
type HospitalDiscoveryServer interface {
	GetInfo(context.Context, *InfoRequest) (*InfoResponse, error)
	ListHospitals(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedHospitalDiscoveryServer can be embedded to have forward compatible implementations.
type UnimplementedHospitalDiscoveryServer struct {
}

func (*UnimplementedHospitalDiscoveryServer) GetInfo(ctx context.Context, req *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (*UnimplementedHospitalDiscoveryServer) ListHospitals(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListHospitals not implemented")
}

func RegisterHospitalDiscoveryServer(s *grpc.Server, srv HospitalDiscoveryServer) {
	s.RegisterService(&_HospitalDiscovery_serviceDesc, srv)
}

func _HospitalDiscovery_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalDiscoveryServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/HospitalDiscovery/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalDiscoveryServer).GetInfo(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalDiscovery_ListHospitals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalDiscoveryServer).ListHospitals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/HospitalDiscovery/ListHospitals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalDiscoveryServer).ListHospitals(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HospitalDiscovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "HospitalDiscovery",
	HandlerType: (*HospitalDiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _HospitalDiscovery_GetInfo_Handler,
		},
		{
			MethodName: "ListHospitals",
			Handler:    _HospitalDiscovery_ListHospitals_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovery.proto",
}
